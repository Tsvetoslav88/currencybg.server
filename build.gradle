/**
 * CurrencyBG Server Build Script
 *
 */
 
buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.4'
    }	
}

apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'java' 
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'

def appVersion = '1.0'
def tomcatVersion = '7.0.54'
sourceCompatibility = JavaVersion.VERSION_1_8

//compileTestJava.options.encoding = 'UTF-8'

repositories {
	jcenter()
	mavenCentral()
}

eclipse {
	project {
		natures 'org.eclipse.jdt.core.javanature',
				'org.eclipse.wst.common.modulecore.ModuleCoreNature',
				'org.eclipse.wst.common.project.facet.core.nature',				
				'org.eclipse.jem.workbench.JavaEMFNature',
				'org.eclipse.wst.jsdt.core.jsNature'
	}
	project.referencedProjects.each { evaluationDependsOn it }
	jdt {
    	sourceCompatibility = JavaVersion.VERSION_1_8
    	targetCompatibility = JavaVersion.VERSION_1_8
    }
  	//classpath.plusConfigurations += [ configurations.compile, configurations.testCompile ]
    classpath {
    	downloadJavadoc = true
    }
}

dependencies {
	compile 'commons-io:commons-io:2.5',
			'commons-beanutils:commons-beanutils:1.9.2',
			'org.apache.commons:commons-lang3:3.4',
			'org.apache.commons:commons-configuration2:2.0',
			'org.apache.httpcomponents:httpasyncclient:4.1.1',
			'org.slf4j:slf4j-log4j12:1.7.+',
			'com.google.guava:guava:19.+',
			'com.google.code.gson:gson:2.6.+',
			'com.sun.jersey:jersey-core:1.19',
			'com.sun.jersey:jersey-servlet:1.19',
			'com.sun.jersey:jersey-server:1.19',
			'mysql:mysql-connector-java:5.1.+',
			'org.jsoup:jsoup:1.8.+',
			'com.github.pengrad:java-telegram-bot-api:2.1.1',
			'xpp3:xpp3:1.1.3.+'
    providedCompile 'javax.servlet:javax.servlet-api:3.0.+',
    				'javax.servlet.jsp:jsp-api:2.2'

    testCompile 'junit:junit:4.+'
    
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"    
}

war {
	manifest {
		def manifestClasspath = configurations.compile.collect { it.getName() }.join(',')
    	attributes (
    		"Class-Path": manifestClasspath,
    		"Implementation-Vendor": 'Vexelon Net Services',
    		"Implementation-Title": 'CurrencyBG Server',
    		"Implementation-Version": appVersion
    	)		
	}
	exclude('src/main/webapp/META-INF/**')
}

tomcat {
    httpPort = 8090
    httpsPort = 8091
    enableSSL = false
    contextPath = 'currencybg'
}
